http:
  middlewares:    
    default-security-headers:
      headers:
        customBrowserXSSValue: 0                          # X-XSS-Protection=1; mode=block
        contentTypeNosniff: true                          # X-Content-Type-Options=nosniff
        forceSTSHeader: true                              # Add the Strict-Transport-Security header even when the connection is HTTP
        frameDeny: false                                   # X-Frame-Options=deny
        referrerPolicy: "strict-origin-when-cross-origin"
        stsIncludeSubdomains: true                        # Add includeSubdomains to the Strict-Transport-Security header
        stsPreload: true                                  # Add preload flag appended to the Strict-Transport-Security header
        stsSeconds: 3153600                              # Set the max-age of the Strict-Transport-Security header (63072000 = 2 years)
        contentSecurityPolicy: "default-src 'self'"     
        customRequestHeaders:
          X-Forwarded-Proto: https
    https-redirectscheme:
      redirectScheme:
        scheme: https
        permanent: true
    # CrowdSec configuration with proper IP forwarding
    crowdsec:
      plugin:
        crowdsec:
          enabled: true # Enable CrowdSec plugin
          logLevel: INFO # Log level
          updateIntervalSeconds: 15 # Update interval
          updateMaxFailure: 0 # Update max failure
          defaultDecisionSeconds: 15 # Default decision seconds
          httpTimeoutSeconds: 10 # HTTP timeout
          crowdsecMode: live # CrowdSec mode
          crowdsecAppsecEnabled: true # Enable AppSec
          crowdsecAppsecHost: crowdsec:7422 # CrowdSec IP address which you noted down later
          crowdsecAppsecFailureBlock: true # Block on failure
          crowdsecAppsecUnreachableBlock: true # Block on unreachable
          crowdsecLapiKey: "your-key" # command: docker exec crowdsec cscli bouncers add traefik  # CrowdSec API key which you noted down later
          crowdsecLapiHost: crowdsec:8080 # CrowdSec
          crowdsecLapiScheme: http # CrowdSec API scheme
          forwardedHeadersTrustedIPs: # Forwarded headers trusted IPs
            #- "0.0.0.0/0" # All IP addresses are trusted for forwarded headers (CHANGE MADE HERE)
            - 10.0.0.0/8
            - 172.16.0.0/12
            - 192.168.0.0/16
          clientTrustedIPs: # Client trusted IPs (CHANGE MADE HERE)
            - "10.0.0.0/8" # Internal LAN IP addresses
            - "172.16.0.0/12" # Internal LAN IP addresses
            - "192.168.0.0/16" # Internal LAN IP addresses
            - "100.89.137.0/20" # Internal LAN IP addresses

  routers:
    portainer:
      entryPoints:
        - "https"
      rule: "Host(`portainer.domain`)"
      middlewares:
        - default-security-headers
        - https-redirectscheme
      tls: {}
      service: portainer
    edge:
      entryPoints:
        - "https"
      rule: "Host(`edge.domain`)"
      middlewares:
        - default-security-headers
        - https-redirectscheme
      service: edge
      tls: {}
  services:
    portainer:
      loadBalancer:
        servers:
          - url: "https://10.33.1.166:9443"
        passHostHeader: true
    edge:
      loadBalancer:
        servers:
          - url: "https://10.33.1.166:8000"
        passHostHeader: true